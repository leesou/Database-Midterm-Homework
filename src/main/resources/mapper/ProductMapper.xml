<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.combinatorics.midtermproject.dao.ProductDao">

  <resultMap id="ProductResultMap" type="team.combinatorics.midtermproject.model.po.ProductPO">
    <id column="pid" jdbcType="INTEGER" property="pid" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="price" jdbcType="DOUBLE" property="price" />
    <result column="sell_time" jdbcType="DATE" property="sellTime" />
    <result column="duration" jdbcType="INTEGER" property="duration" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
  </resultMap>

  <resultMap id="MoneyMap" type="java.util.Map">
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="sum(price)" property="total_money" jdbcType="VARCHAR" />
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from product
    where pid = #{pid,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByUid" parameterType="java.lang.Integer">
    delete from product
    where uid = #{uid}
  </delete>

  <insert id="insert" parameterType="team.combinatorics.midtermproject.model.po.ProductPO">
    <selectKey keyProperty="product.pid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into product (product_name, price, sell_time, duration, uid)
    select #{product.productName}, #{product.price}, #{product.sellTime}, #{product.duration}, #{product.uid}
    from dual
    where ( (#{product.uid} is not null) and (#{product.duration} > 0) and (#{product.uid} in (select uid from user)) )

  </insert>

  <update id="update" parameterType="team.combinatorics.midtermproject.model.po.ProductPO">
    update product
    <trim prefix="SET" suffixOverrides=",">
        <if test="product.duration != null and product.duration > 0">
            duration = #{product.duration},
        </if>
    </trim>
    where pid = #{product.pid}

  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ProductResultMap">
    select pid, product_name, price, sell_time, duration, uid
    from product
    where pid = #{pid,jdbcType=INTEGER}
  </select>

  <select id="selectByUid" parameterType="java.lang.Integer" resultMap="ProductResultMap">
    select pid, product_name, price, sell_time, duration, uid
    from product
    where uid = #{uid,jdbcType=INTEGER}
  </select>

  <select id="countByUid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    create view pro_temp as select pid from product where uid = #{uid,jdbcType=INTEGER};
    select count(*) from pro_temp;
    drop view pro_temp;
  </select>

  <select id="selectAll" resultMap="ProductResultMap">
    create index price_index on product(price);
    select pid, product_name, price, sell_time, duration, uid
    from product
    order by (uid, price);
    alter table product drop index price_index;
  </select>

  <select id="sumMoneyByUid" parameterType="java.lang.Integer" resultType="java.lang.Double">
    select sum(price) from product where uid = #{uid,jdbcType=INTEGER};
  </select>
  
  <select id="sumAllMoney" resultMap="MoneyMap">
    select uid, sum(price) from product
    group by uid
    order by uid
  </select>

</mapper>