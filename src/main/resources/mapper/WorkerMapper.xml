<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.combinatorics.midtermproject.dao.WorkerDao">

  <resultMap id="WorkerResultMap" type="team.combinatorics.midtermproject.model.po.WorkerPO">
    <id column="wid" jdbcType="INTEGER" property="wid" />
    <result column="worker_name" jdbcType="VARCHAR" property="workerName" />
    <result column="salary" jdbcType="DOUBLE" property="salary" />
    <result column="did" jdbcType="INTEGER" property="did" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
  </resultMap>

  <insert id="insert" parameterType="team.combinatorics.midtermproject.model.po.WorkerPO">
    <selectKey keyProperty="worker.wid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into worker (worker_name, salary, did, phone_number, email)
    select #{worker.workerName}, #{worker.salary}, #{worker.did}, #{worker.phoneNumber}, #{worker.email}
    from dual
    where (#{worker.did} in (select did from department))
  </insert>

  <update id="update" parameterType="team.combinatorics.midtermproject.model.po.WorkerPO">
    update worker
    <trim prefix="SET" suffixOverrides=",">
        <if test="worker.workerName != null">
            worker_name = #{worker.workerName},
        </if>
        <if test="worker.salary != null">
            salary = #{worker.salary},
        </if>
        <if test="worker.did != null">
            did = #{worker.did},
        </if>
        <if test="worker.phoneNumber != null">
            phone_number = #{worker.phoneNumber},
        </if>
        <if test="worker.email != null">
            email = #{worker.email}
        </if>
    </trim>
    where wid = #{worker.wid}
    <if test="worker.did != null">
        and #{worker.did} in (select did from department)
    </if>
  </update>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from worker
    where wid = #{wid,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByDid" parameterType="java.lang.Integer">
      delete from worker
      where did = #{did}
  </delete>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="WorkerResultMap">
    select wid, worker_name, salary, did, phone_number, email
    from worker
    where wid = #{wid,jdbcType=INTEGER}
  </select>

  <select id="selectByDid" parameterType="java.lang.Integer" resultMap="WorkerResultMap">
      select wid, worker_name, salary, did, phone_number, email
      from worker
      where did = #{did}
  </select>

  <select id="countByDid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        create view workerD_temp as select wid from worker where did = #{did};
        select count(*) from workerD_temp;
        drop view workerD_temp;
  </select>

  <select id="selectAll" resultMap="WorkerResultMap">
    select wid, worker_name, salary, did, phone_number, email
    from worker
  </select>

  <select id="calculateAvgSalaryByDid" parameterType="java.lang.Integer" resultType="java.lang.Integer">
      create view salaryD_temp as (select salary from worker where did = #{did});
      select avg(all salaryD_temp.salary) from salaryD_temp;
      drop view salaryD_temp
  </select>

</mapper>